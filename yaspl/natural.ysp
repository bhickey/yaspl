;; Natural numbers
(module nat
  (import)
  (export Nat zero succ main)
  
  (data Nat ()
   (zero)
   (succ Nat))
  
  (defn add (x y) (Nat -> Nat -> Nat)
    (case y
      ((zero) -> x)
      ((succ z) -> (succ (add x z)))))

  (defn main (arg) (Nat -> Nat)
    (add (add arg (succ zero)) (succ (succ arg))))

)
